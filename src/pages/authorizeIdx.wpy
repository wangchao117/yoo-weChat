<template>
  <view class="container">
    <!-- banner -->
    <swiper
      indicator-dots="{{indicatorDots}}"
      indicator-color="#0882ff"
      indicator-active-color="#fff"
      autoplay="{{autoplay}}"
      interval="{{interval}}"
      duration="{{duration}}"
    >
      <repeat style="width:100%; height:100%;">
        <swiper-item style="width:100%; height:100%;">
          <image src="../static/authIdx.png" bindtap="toAuth" class="slide-image" style="width:100%; height:100%;" />
        </swiper-item>
      </repeat>
    </swiper>
    <!-- 关联结构 -->
    <view class="btm">
      <view class="txt1">暂未关联孩子账号</view>
      <view class="txt2">关联孩子账号随时了解孩子的学习情况</view>
      <view class="btn" @tap="toAuth"> 关联孩子的悠数学账号 </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import mta from '../utils/mta_analysis.js'
  export default class authorizeIdx extends wepy.page {
    config = {
      navigationBarTitleText: '悠数学-家长'
    }
    components = {}

    data = {
      isBind: true, // 是否绑定孩子
      imgUrls: [],
      indicatorDots: false,
      autoplay: true,
      interval: 6000,
      duration: 500,
      options: {},
      from: '',
      to: '',
      extra: ''
    }

    computed = {}

    methods = {
      toAuth () {
        // 去授权页
        wx.navigateTo({
          url: `/pages/authorize?from=/pages/app&to=${this.to}${this.extra}`
        })
      }
    }

    events = {}

    onLoad(options) {
      console.log('authorizeIdx.wpy --> onLoad')
      mta.Page.init()
      this.options = options
      let extra = ''
      let isFirst = true
      for (const key in options) {
        if (key === 'from') {
          this.from = options['from']
        } else if (key === 'to') {
          this.to = options['to']
        } else {
          if (isFirst) {
            extra = `&${key}=${options[key]}`
            isFirst = false
          } else {
            extra = `${extra}&${key}=${options[key]}`
          }
        }
      }
      this.extra = extra
    }

    onShow() {}
  }
</script>

<style lang="less">
  .container{
    width: 100%;
    height: auto;
  }
  swiper{
    height:230rpx;
    width:690rpx;
    margin: 30rpx auto;
    image{
      border-radius: 10rpx;
    }
  }
  
  // home相关结构
  .content{
    width: 690rpx;
    margin: 0 auto;
    height: auto;
    .report{
      width: 100%;
      height: 160rpx;
      position: relative;
      border-bottom: 1rpx solid #cce4ff;
      .head{
        position: absolute;
        top: 15rpx;
        left: 0;
        font-size: 40rpx;
        font-weight: 900;
      }
      .near{
        width:75%;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        font-size: 30rpx;
        color: #999999;
        position: absolute;
        bottom: 30rpx;
        left: 0;
      }
      .read{
        position: absolute;
        top: 30rpx;
        right: 0;
        width: 160rpx;
        height: 60rpx;
        color: #007AFF;
        background: #cce4ff;
        border-radius: 30rpx;
        text-align: center;
        line-height: 60rpx;
        font-size: 30rpx;
      }
    }
    .vip{
      width: 100%;
      height: auto;
      .vipHead{
        margin-top: 40rpx; 
        font-size: 38rpx;
        font-weight: 900;
        image{
          width: 60rpx;
          height: 32rpx;
          margin-left: 20rpx;
        }
      }
      .monitor{
        display: flex;
        justify-content: space-between;
        font-size: 30rpx;
        padding: 0 30rpx;
        height: 80rpx;
        line-height: 80rpx;
        margin-top: 30rpx;
        background: #B2D7FD;
        border-radius: 10rpx;
        .left{
          color: #007AFF;
        }
        .right{
          color: #007AFF;
          image{
            width: 15rpx;
            height: 25rpx;
            vertical-align: middle;
            margin-top: -4rpx;
            padding-left: 20rpx;
          }
        }

      }
      .notHaveTip{
        background: #60CAA1;
        .left{
          color: #ffffff;
          display: flex;
          view{
            width: 600rpx;
            overflow: hidden;
            text-overflow:ellipsis;
            white-space: nowrap;
          }
          image{
             width: 32rpx;
            height: 32rpx;
            // vertical-align: middle;
            margin-right: 15rpx;
            margin-top: 24rpx;
            display: block;
          }
        }
      }
      .HaveTip{
        background: #F14B40;
        .left{
          color: #ffffff;
          display: flex;
          view{
            width: 600rpx;
            overflow: hidden;
            text-overflow:ellipsis;
            white-space: nowrap;
          }
          image{
             width: 32rpx;
            height: 32rpx;
            // vertical-align: middle;
            margin-right: 15rpx;
            margin-top: 24rpx;
            display: block;
          }
        }
      }
      .base{
        width: 100%;
        min-height: 160rpx;
        margin-top: 30rpx;
        border-radius: 10rpx;
        .topH{
          font-size: 40rpx;
          font-weight: 900;
          padding: 24rpx 30rpx;
          padding-bottom: 18rpx;
          image{
            width: 80rpx;
            height: 30rpx;
            margin-left: 15rpx;
          }
        }
        .eg{
          image{
            width: 120rpx;
          }
        }
        .txt{
          padding: 0 30rpx;
          font-size: 30rpx;
          width: 600rpx;
          overflow: hidden;
          text-overflow:ellipsis;
          white-space: nowrap;
        }
      }
      .learnState{
        background: #FFE288;
        .txt{
          color: #BA9A37;
        }
      }
      .learnAnalysis{
        background: #8DE6FF;
        .txt{
          color: #3B9CB7;
        }
      }
    }

  }
  // 关联结构
  .btm{
    width: 690rpx;
    height: auto;
    margin: 0 auto;
    margin-top: 200rpx;
    .txt1{
      width: 100%;
      text-align: center;
      font-size: 36rpx;
      height: 70rpx;
      font-weight: 900;
    }
    .txt2{
      width: 100%;
      text-align: center;
      font-size: 30rpx;
      height: 70rpx;
    }
    .btn{
      background: #007AFF;
      color: #ffffff;
      font-size: 32rpx;
      font-weight: 900;
      height: 90rpx;
      text-align: center;
      line-height: 90rpx;
      border-radius: 10rpx;
    }
  }
</style>
