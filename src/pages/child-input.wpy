<template>
  <view class="container">
    <form bindsubmit="formSubmit" bindreset="formReset">
      <view class="title">请输入孩子的悠数学账号和密码 </view>
      <view class="section">
        <input bindinput="countValChange" name="account" placeholder="请输入孩子的账号或绑定的手机号" />
      </view>
      <view class="section">
        <input bindinput="psdValChange" name="password" placeholder="请输入密码" password="{{!showPsd}}" />
        <view class="imgWrap" bindtap="showPsd">
          <image wx:if="{{!showPsd}}" src="../static/password1.png" />
          <image wx:if="{{showPsd}}" src="../static/password2.png" />
        </view>
      </view>
      <view class="btn-area">
        <button formType="submit" class="{{hasBinding?'disabled':''}}"  disabled="{{hasBinding}}">关联账号</button>
      </view>
      <view class="subTitle">忘记了孩子的账号或密码<image class="arrow {{isScroll?'scroll':''}}" @tap="scroll" src="../static/black-arrow.png"/></view>
      <block wx:if="{{isScroll}}">
        <view class="paragraph">方法1.  可让孩子在“悠数学-学生端”个人中心页面，截取二维码图片后发送给你。在家长端使用扫码绑定功能对孩子进行关联。<view class="point" @tap="scan">立即扫码绑定</view></view>
        <view class="paragraph">方法2. 向孩子索要账号或密码</view>
        <view class="paragraph">方法3. 联系客服，提供孩子详细信息，由客服进行密码重置，客服电话：400-828-6506</view>
      </block>
      <!-- <view class="btn-area notSub" wx-if="{{!isSub}}">
        <button formType="submit">关联账号</button>
      </view> -->
    </form>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import { SET_IS_BIND } from '../store/types/user'
  import CryptoJS from 'crypto-js'
  import mta from '../utils/mta_analysis.js'
  import {
    SET_AVATAR_URL,
    SET_SCHOOL_NAME,
    SET_STUDENT_NAME,
    SET_STUDENT_ID
  } from '../store/types/associated-account'
  @connect({}, {
    setAvatarUrl: SET_AVATAR_URL,
    setSchoolName: SET_SCHOOL_NAME,
    setStudentName: SET_STUDENT_NAME,
    setStudentId: SET_STUDENT_ID
  })
  export default class ChildInput extends wepy.page {
    config = {
      navigationBarTitleText: '关联孩子账号'
    }
    components = {}

    data = {
      showPsd: false,
      hasBinding: false,
      isScroll: false,
      count: '',
      psd: ''
    }

    methods = {
      scan () {
        let that = this
        mta.Event.stat('scan_code')
        wepy.scanCode({
          success (res) {
            console.log('associated-account.wpy --> scan --> succcess')
            console.log(res)
            try {
              that._getAccountInfo(that._decryptByDES(res.result, 'elanking'))
            } catch (error) {
              wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
            }
          },
          fail (res) {
            console.log('associated-account.wpy --> scan --> fail')
            console.log(res)
            if (!res.errMsg.includes('cancel')) {
              wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
            }
          }
        })
      },
      showBindingPage () {
        wepy.navigateTo({
          url: '/pages/associated-account'
        })
      },
      scroll () {
        this.isScroll = !this.isScroll
      },
      formSubmit (e) {
        // 后台交互
        console.log('form发生了submit事件，携带数据为：', e.detail.value)
        mta.Event.stat('Bind_Student')
        this._bindAccount(e.detail.value.account, e.detail.value.password)
        // 弹窗
        // wepy.showToast({
        //   title: '成功',
        //   icon: 'none',
        //   duration: 2000
        // })
      },
      showPsd() {
        this.showPsd = !this.showPsd
      },
      countValChange(e) {
        this.count = e.detail.value
        console.log(e.detail.value)
      },
      psdValChange(e) {
        this.psd = e.detail.value
        console.log(e.detail.value)
      }
    }

    _decryptByDES (ciphertext, key) {
      let keyHex = CryptoJS.enc.Utf8.parse(key)
      let decrypted = CryptoJS.DES.decrypt({
        ciphertext: CryptoJS.enc.Base64.parse(ciphertext)
      }, keyHex, {
        mode: CryptoJS.mode.ECB,
        padding: CryptoJS.pad.Pkcs7
      })
      return decrypted.toString(CryptoJS.enc.Utf8)
    }

    _getAccountInfo (id) {
      let that = this
      wepy.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/scanFindStu`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wepy.getStorageSync('token')
        },
        data: {
          stuId: id
        },
        success (res) {
          console.log('associated-account.wpy --> _getAccountInfo --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            that.methods.setStudentId(id)
            if (res.data.ret.photoUrl) {
              that.methods.setAvatarUrl(`${that.$parent.globalData.baseURL}${res.data.ret.photoUrl}`)
            } else {
              that.methods.setAvatarUrl('../static/baseVia.png')
            }
            that.methods.setSchoolName(res.data.ret.schoolName)
            that.methods.setStudentName(res.data.ret.studentName)
            wepy.navigateTo({
              url: '/pages/verify-account'
            })
          } else {
            wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
          }
        },
        fail (res) {
          console.log('associated-account.wpy --> _getAccountInfo --> fail')
          console.log(res)
          wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
        }
      })
    }

    _bindAccount (account, password) {
      console.log(account, password)
      this.hasBinding = true
      let that = this
      if (this.count && this.psd) {
        wx.request({
          url: `${this.$parent.globalData.baseURL}/wx/micro/parent/bindStu`,
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'S_T': wx.getStorageSync('token')
          },
          data: {
            userName: account,
            password: password
          },
          success (res) {
            console.log('child-input.wpy --> _bindAccount --> success')
            console.log(res)
            if (res.data.ret_code === 0) {
              wx.showToast({
                title: '关联成功',
                icon: 'success',
                duration: 1400,
                success () {
                  mta.Event.stat('Bind_Student_Success')
                  setTimeout(() => {
                    wx.navigateBack({delta: 2})
                  }, 1400)
                }
              })
            } else {
              mta.Event.stat('Bind_Student_Fail')
              wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
              that.hasBinding = false
              that.$apply()
            }
          },
          fail (res) {
            console.log('child-input.wpy --> _bindAccount --> success')
            console.log(res)
            wx.showToast({icon: 'none', title: '关联孩子失败', duration: 1400})
            that.hasBinding = false
            that.$apply()
          }
        })
      } else {
        wx.showToast({icon: 'none', title: '账号和密码不能为空', duration: 1400})
        that.hasBinding = false
        that.$apply()
      }
    }

    computed = {
      isSub() {
        if (this.count && this.psd) {
          return true
        } else {
          return false
        }
      }
    }

    onLoad() {
      mta.Page.init()
    }
  }

</script>
<style lang="scss" scoped>
  .container{
    width: 690rpx;
    margin: 0 auto;
    form{
      width: 100%;
      height: auto;
    }
    .title{
      margin: 30rpx 0;
      font-size: 40rpx;
      font-weight: 900;
      padding: 0;
    }
    .section{
      height: 90rpx;
      width: 100%;
      border-bottom: 1rpx solid #cccccc;
      margin-top: 20rpx;
      position: relative;
      input{
        height: 100%;
        line-height: 90rpx;
      }
      .imgWrap{
        width: 48rpx;
        height: 48rpx;
        display: black;
        padding: 15rpx;
        position: absolute;
        top: 0;
        right: 15rpx;
        z-index: 99;
        image{
          width: 48rpx;
          height: 48rpx;
        }
      }
      
    }
    .btn-area{
      margin-top: 50rpx;
      button{
        color: #ffffff;
        background: #007AFF;
      }
    }
    .notSub button{
      background: #cccccc;
      color: #999999;
    }
    .subTitle{
      display: flex;
      align-items: center;
      margin-top: 90rpx;
      font-size: 30rpx;
      font-weight:400;
      color: #000000;
      line-height: 40rpx;
    }
    .arrow{
      display: block;
      width: 24rpx;
      height: 14rpx;
      padding: 16rpx;
      transition: transform 0.2s ease-in-out;
      transform: rotate(-90deg);
      &.scroll{
        transform: rotate(0);
      }
    }
    .paragraph, .point{
      margin-top: 20rpx;
      font-size: 30rpx;
      color:#999999;
      line-height: 42rpx;
    }
    .point{
      display: inline;
      color:#007AFF;
    }
  }
  .container .btn-area button.disabled{
    color: #2b2b2b;
    background: #eeeeee;
  }
  
</style>
