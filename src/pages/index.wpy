<template>
  <view class="container">
    <!-- banner -->
    <swiper
      indicator-dots="{{indicatorDots}}"
      indicator-color="#0882ff"
      indicator-active-color="#fff"
      autoplay="{{autoplay}}"
      interval="{{interval}}"
      duration="{{duration}}"
    >
      <repeat for="{{imgUrls}}" key="index" index="index" item="item" style="width:100%; height:100%;">
        <swiper-item style="width:100%; height:100%;">
          <image src="{{item }}" class="slide-image" style="width:100%; height:100%;" />
        </swiper-item>
      </repeat>
    </swiper>
    <!-- 关联结构 -->
    <view class="btm" wx:if="{{!isBind}}">
      <view class="txt1">暂未关联孩子账号</view>
      <view class="txt2">关联孩子账号随时了解孩子的学习情况</view>
      <button class="btn" bindgetuserinfo="onGotUserInfo" open-type="getUserInfo"> 关联孩子的悠数学账号 </button>
    </view>
    <!-- 已关联展示home结构 -->
    <view class="content" wx:if="{{isBind}}">
      <!-- 作业报告部分 -->
      <view class="report">
        <view class="head">作业报告</view>
        <view wx:if="{{isHasRep}}" class="near">近期作业：《04月24日作业》</view>
        <view wx:if="{{!isHasRep}}" class="near">近期作业：暂无作业</view>
        <view class="read" bindtap="readReport()">查看</view>
      </view>
      <!-- VIP培优服务 -->
      <view class="vip">
        <view class="vipHead">VIP培优服务<image src="../static/vip.png" /></view>
        <!-- 监控 -->
        <view class="monitor" bindtap="toMonitor" wx:if="{{!isVip}}">
          <view class="left">监控学习情况，有问题立即提醒</view>
          <view class="right">了解详情<image src="../static/right-arrow.png" /></view>
        </view>
        <!-- vip没有报警 -->
        <view class="monitor notHaveTip" bindtap="toMonitor" wx:if="{{isVip&&!haveTip}}">
          <view class="left"><image src="../static/notHaveTip.png" />正在监控中...学习情况正常</view>
        </view>
        <!-- vip有报警 -->
        <view class="monitor HaveTip" bindtap="toMonitor" wx:if="{{isVip&&haveTip}}">
          <view class="left"><image src="../static/HaveTip.png" />有1条异常警报：作业[05月06</view>
        </view>

        <!-- 学习动态  -->
        <view class="base learnState" bindtap="toState">
          <view class="topH">学习动态<image wx:if="{{newShow}}" src="../static/new.png" /></view>
          <view class="txt">05-26 15:30 开始自主练习</view>
          <!-- <view class="txt">暂无学习动态</view> -->
        </view>
        <!-- 学情分析  -->
        <view class="base learnAnalysis" bindtap="toAnalysis">
          <view class="topH">学情分析<image src="" /></view>
          <view class="txt">03.21 ~ 03.27 周成绩报告</view>
          <!-- <view class="txt">暂无成绩报告</view> -->
        </view>
      </view>

    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '悠数学-家长'
    }
    components = {}

    data = {
      isBind: false, // 是否绑定孩子
      isHasRep: true, // 是否有作业报告,false为没有
      isVip: true, // 是否是vip
      haveTip: true, // vip是否有报警
      newShow: true, // 学习动态
      isAuthorize: false, // 用户是否授权
      imgUrls: [
        'http://img02.tooopen.com/images/20150928/tooopen_sy_143912755726.jpg',
        'http://img06.tooopen.com/images/20160818/tooopen_sy_175866434296.jpg',
        'http://img06.tooopen.com/images/20160818/tooopen_sy_175833047715.jpg'
      ],
      indicatorDots: true,
      autoplay: true,
      interval: 3000,
      duration: 500
    }

    computed = {}

    methods = {
      onGotUserInfo() {
        this._getAuthorize()
        if (this.isAuthorize) {
          // 授权
          this._login()
        } else {
          // 未授权
        }
        // 获取信息权限<button open-type="getUserInfo"></button>
        // wepy.redirectTo({
        //   url: `/pages/child-input`
        // })
      },
      readReport() {
        // 跳转报告页
        console.log(123456789)
      },
      toState() {
        // 跳转学习动态页面
        this.newShow = false
        console.log('跳转学习动态页面')
        // wepy.navigateTo({
        //   url: '/pages/not-join-trend'
        // })
        wepy.navigateTo({
          url: '/pages/join-trend'
        })
      },
      toAnalysis() {
        // 跳转学情分析页面
        console.log('跳转学情分析页面')
        // wepy.navigateTo({
        //   url: '/pages/analysis'
        // })
        setTimeout(() => {
          this.$parent.globalData.userCode = '123123123'
          wepy.navigateTo({
            url: '/pages/analysis'
          })
        }, 2000)
      },
      toMonitor() {
        // 跳转警告页
        console.log('跳转警告页')
        wepy.navigateTo({
          url: `/pages/warn`
        })
      }
    }

    async _login () {
      let code = await this._getCode()
      let {encryptedData, iv} = await this._getUserInfo()
      this._setToken(code, encryptedData, iv)
    }

    _checkToken () {
      return new Promise((resolve, reject) => {
        let token = wx.getStorageSync('token')
        if (token) {
          wx.request({
            url: `${this.$parent.globalData.baseURL}/wx/micro/parent/checkToken`,
            method: 'POST',
            header: {
              'Content-Type': 'application/x-www-form-urlencoded',
              'S_T': token
            },
            success (res) {
              console.log('index.wpy --> _checkToken --> success')
              console.log(res)
              if (res.data.ret_code === 0) {
                resolve(true)
              } else {
                resolve(false)
              }
            },
            fail (res) {
              console.log('index.wpy --> _checkToken --> fail')
              console.log(res)
              resolve(false)
            }
          })
        } else {
          resolve(false)
        }
      })
    }

    _setToken (code, encryptedData, iv) {
      wx.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/login`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        data: {
          code: code,
          encryptedData: encryptedData,
          iv: iv
        },
        success (res) {
          console.log('index.wpy --> _setToken --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            wx.setStorageSync('token', res.data.ret.token)
          } else {
            // wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
          }
        },
        fail (res) {
          console.log('index.wpy --> _setToken --> fail')
          console.log(res)
          // wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
        }
      })
    }

    // 获取code
    _getCode () {
      return new Promise((resolve, reject) => {
        wx.login({
          success (res) {
            console.log('index.wpy --> _getCode --> success')
            console.log(res)
            if (res.code) {
              resolve(res.code)
            } else {
              wx.showToast({icon: 'none', title: '登录失败', duration: 1400})
            }
          },
          fail (res) {
            console.log('index.wpy --> _getCode --> fail')
            console.log(res)
            // wx.showToast({icon: 'none', title: '登录失败', duration: 1400})
          }
        })
      })
    }

    // 获取用户信息
    _getUserInfo () {
      return new Promise((resolve, reject) => {
        wx.getUserInfo({
          withCredentials: true,
          success (res) {
            console.log('index.wpy --> _getUserInfo --> success')
            console.log(res)
            resolve({encryptedData: res.encryptedData, iv: res.iv})
          },
          fail (res) {
            console.log('index.wpy --> _getUserInfo --> fail')
            console.log(res)
            // wx.showToast({icon: 'none', title: '获取用户信息失败', duration: 1400})
          }
        })
      })
    }

    events = {}

    onLoad() {
      console.log('index.wpy --> onLoad')
      // 后台查看是否关联过孩子,isBind变为true
      this.isBind = true
      // let isAuthorize = await this._getAuthorize()
      // if (isAuthorize) {
      //   let checkToken = await this._checkToken()
      //   if (!checkToken) {
      //     this._login()
      //   }
      // }
    }

    // 判断用户是否授权
    _getAuthorize () {
      return new Promise((resolve, reject) => {
        wx.getSetting({
          success (res) {
            console.log('index.wpy --> _getAuthorize --> success')
            console.log(res)
            if (!res.authSetting['scope.userInfo']) {
              resolve(false)
            } else {
              resolve(true)
            }
          }
        })
      })
    }
  }
</script>

<style lang="less">
  .container{
    width: 100%;
    height: auto;
  }
  swiper{
    height:230rpx;
    width:690rpx;
    margin: 30rpx auto;
  }
  // home相关结构
  .content{
    width: 690rpx;
    margin: 0 auto;
    height: auto;
    .report{
      width: 100%;
      height: 160rpx;
      position: relative;
      border-bottom: 1rpx solid #cce4ff;
      .head{
        position: absolute;
        top: 15rpx;
        left: 0;
        font-size: 40rpx;
        font-weight: 900;
      }
      .near{
        font-size: 30rpx;
        color: #999999;
        position: absolute;
        bottom: 30rpx;
        left: 0;
      }
      .read{
        position: absolute;
        top: 30rpx;
        right: 0;
        width: 160rpx;
        height: 60rpx;
        color: #007AFF;
        background: #cce4ff;
        border-radius: 30rpx;
        text-align: center;
        line-height: 60rpx;
        font-size: 30rpx;
      }
    }
    .vip{
      width: 100%;
      height: auto;
      .vipHead{
        margin-top: 40rpx; 
        font-size: 38rpx;
        font-weight: 900;
        image{
          width: 60rpx;
          height: 32rpx;
          margin-left: 20rpx;
        }
      }
      .monitor{
        display: flex;
        justify-content: space-between;
        font-size: 30rpx;
        padding: 0 30rpx;
        height: 80rpx;
        line-height: 80rpx;
        margin-top: 30rpx;
        background: #B2D7FD;
        border-radius: 10rpx;
        .left{
          color: #007AFF;
        }
        .right{
          color: #007AFF;
          image{
            width: 15rpx;
            height: 25rpx;
            vertical-align: middle;
            margin-top: -4rpx;
            padding-left: 20rpx;
          }
        }

      }
      .notHaveTip{
        background: #60CAA1;
        .left{
          color: #ffffff;
          image{
            width: 32rpx;
            height: 32rpx;
            vertical-align: middle;
            margin-right: 15rpx;
            margin-top: -5rpx;
          }
        }
      }
      .HaveTip{
        background: #F14B40;
        .left{
          color: #ffffff;
          image{
            width: 32rpx;
            height: 32rpx;
            vertical-align: middle;
            margin-right: 15rpx;
            margin-top: -5rpx;
          }
        }
      }
      .base{
        width: 100%;
        height: 160rpx;
        margin-top: 30rpx;
        border-radius: 10rpx;
        .topH{
          font-size: 40rpx;
          font-weight: 900;
          padding: 24rpx 30rpx;
          image{
            width: 80rpx;
            height: 30rpx;
            margin-left: 15rpx;
          }
        }
        .txt{
          padding: 0 30rpx;
          font-size: 30rpx;
        }
      }
      .learnState{
        background: #FFE288;
        .txt{
          color: #BA9A37;
        }
      }
      .learnAnalysis{
        background: #8DE6FF;
        .txt{
          color: #3B9CB7;
        }
      }
    }

  }
  // 关联结构
  .btm{
    width: 690rpx;
    height: auto;
    margin: 0 auto;
    margin-top: 200rpx;
    .txt1{
      width: 100%;
      text-align: center;
      font-size: 36rpx;
      height: 70rpx;
      font-weight: 900;
    }
    .txt2{
      width: 100%;
      text-align: center;
      font-size: 30rpx;
      height: 70rpx;
    }
    .btn{
      background: #007AFF;
      color: #ffffff;
      font-size: 32rpx;
      font-weight: 900;
      height: 90rpx;
      line-height: 90rpx;
    }
  }
</style>
