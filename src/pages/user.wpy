<template>
  <view id="user">
    <block wx:if="{{!isGetData}}">
      <view class="loading">
        <image class="rotate" src="../static/loading.png"/>
        <view class="text">正在加载</view>
      </view>
    </block>
    <block wx:else>
      <view class="userInfo {{hasBind?'binding':'unbinding'}}">
        <view class="info">
          <view class="name" wx:if="{{hasBind}}">{{childName}}的家长</view>
          <view class="name" wx:if="{{!hasBind}}">未绑定悠数学账号</view>
          <view class="account" wx:if="{{hasBind}}">孩子账号：{{childNickName}}</view>
          <view class="describe" wx:if="{{hasBind && !hasJoin}}">未加入VIP培优计划</view>
          <view class="describe join" wx:if="{{hasBind && hasJoin}}">已加入VIP培优计划：{{expirationDate}} 到期</view>
        </view>
        <view class="viaWrap">
          <image class="viaImg {{hasBind && hasJoin?'vip':''}}" src="{{childViaSrc}}"/>
          <image class="vipImg" wx:if="{{hasBind && hasJoin}}" src="../static/vip-radius.png"/>
        </view>
      </view>
      <!-- <button class="item" open-type="contact" session-from="user">
        <view class="label">微信客服</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </button> -->
      <view class="item" @tap="showCallActionSheet" wx:if="{{hasAuthorize}}">
        <view class="label">电话客服</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </view>
      <button class="item" open-type="getUserInfo" wx:if="{{!hasAuthorize}}" @getuserinfo="getuserinfo">
        <view class="label">电话客服</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </button>

      <view class="item" wx:if="{{!hasBind && hasAuthorize}}" @tap="showBindingPage">
        <view class="label">绑定孩子悠数学账号</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </view>
      <button class="item" open-type="getUserInfo" wx:if="{{!hasAuthorize}}" @getuserinfo="getuserinfo">
        <view class="label">绑定孩子悠数学账号</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </button>

      <view class="item" wx:if="{{hasBind}}" @tap="showUnbindingModal">
        <view class="label">解除绑定</view>
        <image class="arrowImg" src="../static/base-right-arrow.png"/>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import moment from 'moment'
  import mta from '../utils/mta_analysis.js'

  export default class User extends wepy.page {
    config = {
      navigationBarTitleText: '悠数学-家长'
    }

    components = {}

    mixins = []

    data = {
      isGetData: true
    }

    computed = {
      hasAuthorize () {
        return wepy.$instance.globalData.hasAuthorize
      },
      hasSetToken () {
        return wepy.$instance.globalData.hasSetToken
      },
      childName () {
        return wepy.$instance.globalData.childName
      },
      childNickName () {
        return wepy.$instance.globalData.childNickName
      },
      childViaSrc () {
        return wepy.$instance.globalData.childViaSrc
      },
      hasBind () {
        return wepy.$instance.globalData.hasBind
      },
      hasJoin () {
        return wepy.$instance.globalData.hasJoin
      },
      expirationDate () {
        return wepy.$instance.globalData.expirationDate
      },
      serviceTel () {
        return wepy.$instance.globalData.serviceTel
      }
    }

    methods = {
      getuserinfo () {
        // 这个判断授权 =。=
        if (arguments[0].detail.errMsg.includes('ok')) {
          wepy.$instance._onLaunch()
        }
      },
      showUnbindingModal () {
        let that = this
        mta.Event.stat('Unbound_Student_Show')
        wx.showModal({
          title: '确定解除绑定？',
          content: '解除绑定后公众号中将不再接收作业提醒推送',
          confirmColor: '#007AFF',
          success (res) {
            if (res.confirm) {
              that._unboundStudent()
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
      },
      showBindingPage () {
        wx.navigateTo({
          url: '/pages/associated-account'
        })
      },
      showCallActionSheet () {
        let that = this
        wx.showActionSheet({
          itemList: [`拨打 ${that.serviceTel}`],
          itemColor: '#007AFF',
          success (res) {
            console.log(res)
            if (that.serviceTel) {
              that._callService()
            } else {
              wx.showToast({icon: 'none', title: '未获取到电话号码', duration: 1400})
            }
          }
        })
      }
    }

    // 拨打客服电话
    _callService () {
      mta.Event.stat('Call_Service')
      wx.makePhoneCall({
        phoneNumber: this.serviceTel.replace(/-/g, '')
      })
    }

    _reset () {
      wepy.$instance.globalData.hasBind = false
      wepy.$instance.globalData.hasJoin = false
      wepy.$instance.globalData.childViaSrc = '../static/baseVia.png'
      this.isGetData = true
      this.$apply()
    }

    _getBindStatus () {
      let that = this
      wx.request({
        url: `${wepy.$instance.globalData.baseURL}/wx/micro/parent/hasBind`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wx.getStorageSync('token')
        },
        success (res) {
          console.log('user.wpy --> _getBindStatus --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            wepy.$instance.globalData.hasBind = res.data.ret.hasBind
            if (res.data.ret.hasBind) {
              that._getInfo()
            } else {
              that._reset()
            }
          } else {
            that._reset()
            wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
          }
        },
        fail (res) {
          console.log('user.wpy --> _getBindStatus --> fail')
          console.log(res)
          that._reset()
          wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
        }
      })
    }

    _getInfo () {
      let that = this
      Promise.all([this._getUserVipInfo(), this._getUserBaseInfo()]).then((result) => {
        console.log('user.wpy --> _getInfo')
        that.isGetData = true
        that.$apply()
      })
    }

    _getUserVipInfo () {
      // let that = this
      return new Promise((resolve, reject) => {
        wx.request({
          url: `${wepy.$instance.globalData.baseURL}/wx/parent/getUserInfo`,
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'S_T': wx.getStorageSync('token')
          },
          success (res) {
            console.log('user.wpy --> _getUserVipInfo --> success')
            console.log(res)
            if (res.data.ret_code === 0) {
              wepy.$instance.globalData.hasJoin = res.data.ret.userMember.memberType.toLowerCase().includes('vip')
              if (res.data.ret.userMember.memberType.toLowerCase().includes('vip')) {
                wepy.$instance.globalData.expirationDate = moment(res.data.ret.userMember.endAt).format('YYYY-MM-DD')
              }
              resolve(true)
            } else {
              wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
              reject(new Error('请求success，但ret_code不为0'))
            }
          },
          fail (res) {
            console.log('user.wpy --> _getUserVipInfo --> fail')
            console.log(res)
            wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
            reject(new Error('请求fail'))
          }
        })
      })
    }

    _getUserBaseInfo () {
      let that = this
      return new Promise((resolve, reject) => {
        wx.request({
          url: `${wepy.$instance.globalData.baseURL}/wx/micro/parent/user/userCenter`,
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'S_T': wx.getStorageSync('token')
          },
          success (res) {
            console.log('user.wpy --> _getUserBaseInfo --> success')
            console.log(res)
            if (res.data.ret_code === 0) {
              wepy.$instance.globalData.childName = res.data.ret.studentInfo.name
              wepy.$instance.globalData.childNickName = res.data.ret.studentAccount.name
              if (res.data.ret.studentInfo.minAvatarUrl) {
                wepy.$instance.globalData.childViaSrc = `${that.$parent.globalData.baseURL}${res.data.ret.studentInfo.minAvatarUrl}`
              } else {
                wepy.$instance.globalData.childViaSrc = '../static/baseVia.png'
              }
              resolve(true)
            } else {
              wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
              reject(new Error('请求success，但ret_code不为0'))
            }
          },
          fail (res) {
            console.log('user.wpy --> _getUserBaseInfo --> fail')
            console.log(res)
            wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
            reject(new Error('请求fail'))
          }
        })
      })
    }

    _unboundStudent () {
      let that = this
      wx.request({
        url: `${wepy.$instance.globalData.baseURL}/wx/micro/parent/user/unbindStudent`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wx.getStorageSync('token')
        },
        success (res) {
          console.log('user.wpy --> _unboundStudent --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            mta.Event.stat('Unbound_Student_Confirm')
            that._getBindStatus()
          } else {
            wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
          }
        },
        fail (res) {
          console.log('user.wpy --> _unboundStudent --> fail')
          console.log(res)
          wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
        }
      })
    }

    _checkLogin () {
      // console.log('user.wpy --> _checkLogin')
      if (wepy.$instance.globalData.hasSetToken) {
        this._getBindStatus()
      } else {
        setTimeout(() => {
          this._checkLogin()
        }, 100)
      }
    }

    events = {}

    onLoad () {
      console.log('user.wpy --> onLoad')
      mta.Page.init()
    }

    onShow () {
      console.log('user.wpy --> onShow')
      this._checkLogin()
    }
  }
</script>
<style lang="scss" scoped>
#user{
  display: flex;
  flex-direction: column;
  .userInfo{
    position: relative;
    display: flex;
    justify-content: space-between;
    min-height: 230rpx;
    margin: 30rpx 30rpx 10rpx;
    border-radius: 10rpx;
    padding: 40rpx;
    box-sizing: border-box;
    &.binding{
      background: #007AFF;
      .info{
        .name{
          color: #FFFFFF;
        }
        .account{
          color: #FFFFFF;
        }
        .describe{
          color: #64AFFF;
          &.join{
            color: #ffffff;
          }
        }
      }
    }
    &.unbinding{
      background: #F6F6F6;
      .info{
        .name{
          color: #000000;
        }
      }
    }
    .info{
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      .name{
        font-weight: bold;
        font-size: 40rpx;
        letter-spacing: 1rpx;
        padding-right: 120rpx;
      }
      .account{
        font-weight: bold;
        font-size: 30rpx;
        letter-spacing: 1rpx;
        margin: 20rpx 0 25rpx;
      }
      .describe{
        font-weight: bold;
        font-size: 30rpx;
        letter-spacing: 1rpx;
        white-space: nowrap;
      }
    }
    .viaWrap{
      position: absolute;
      right: 40rpx;
      display: flex;
      flex-direction: column;
      flex:0 0 auto;
      align-items: center;
      .viaImg{
        display: block;
        width: 100rpx;
        height: 100rpx;
        border-radius: 100%;
        &.vip{
          border: 4rpx solid #ffbc01;
        }
      }
      .vipImg{
        display: block;
        width: 60rpx;
        height: 24rpx;
        margin-top: -14rpx; 
      }
    }
  }
  .item{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 40rpx 32rpx 40rpx 0;
    margin: 0 0 0 30rpx;
    outline: none;
    line-height: 30rpx;
    border: 0 solid #fff;
    color: #000;
    border-radius: 0;
    border-bottom: 1rpx solid #CCCCCC;
    background: #fff;
    .label{
      font-weight: bold;
      font-size: 40rpx;
      letter-spacing: 1rpx;
    }
    .arrowImg{
      width: 14rpx;
      height: 24rpx;
    }
  }
  button::after{
    border:none;
  }

  .loading{
    display: flex;
    height: 100vh;
    background: #ffffff;
    flex-direction: column;
    flex:1 1 auto;
    align-items: center;
    justify-content: center;
    .text{
      font-weight: bold;
      font-size: 30rpx;
      line-height: 40rpx;  
    }
  }
  @keyframes rotate{
    0%{
      transform: rotate(0);
    }
    50%{
    	transform:rotate(180deg);
    }
    100%{
      transform: rotate(360deg);
    }
  }
  .rotate{
    display: block;
    width: 60rpx;
    height: 60rpx;
    margin-bottom: 4rpx;
    transition: 0.5s;
    animation: rotate 0.8s linear infinite;
  }
}
</style>
