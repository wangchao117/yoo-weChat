<template>
  <view id="user">
    <block wx:if="{{!isGetData}}">
      <view class="loading">
        <image class="rotate" src="../static/loading.png"/>
        <view class="text">正在加载</view>
      </view>
    </block>
    <block wx:else>
      <view class="userInfo {{bindStatus?'binding':'unbinding'}}">
        <view class="info">
          <view class="name" wx:if="{{bindStatus}}">{{childName}}的家长</view>
          <view class="name" wx:if="{{!bindStatus}}">未绑定悠数学账号</view>
          <view class="account" wx:if="{{bindStatus}}">孩子账号：{{childNickName}}</view>
          <view class="describe" wx:if="{{bindStatus && !joinStatus}}">未加入VIP培优计划</view>
          <view class="describe join" wx:if="{{bindStatus && joinStatus}}">已加入VIP培优计划：{{expirationDate}} 到期</view>
        </view>
        <view class="viaWrap">
          <image class="viaImg {{joinStatus?'vip':''}}" src="{{baseViaSrc}}"/>
          <image class="vipImg" wx:if="{{joinStatus}}" src="{{vipSrc}}"/>
        </view>
      </view>
      <!-- <button class="item" open-type="contact" session-from="user">
        <view class="label">微信客服</view>
        <image class="arrowImg" src="{{baseArrowSrc}}"/>
      </button> -->
      <view class="item" @tap="showCallActionSheet">
        <view class="label">电话客服</view>
        <image class="arrowImg" src="{{baseArrowSrc}}"/>
      </view>
      <view class="item" wx:if="{{!bindStatus}}" @tap="showBindingPage">
        <view class="label">绑定孩子悠数学账号</view>
        <image class="arrowImg" src="{{baseArrowSrc}}"/>
      </view>
      <view class="item" wx:if="{{bindStatus}}" @tap="showUnbindingModal">
        <view class="label">解除绑定</view>
        <image class="arrowImg" src="{{baseArrowSrc}}"/>
      </view>
    </block>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import moment from 'moment'
  import { SET_CHILD_NICK_NAME, SET_CHILD_NAME, SET_EXPIRATION_DATE, SET_JOIN_STATUS, SET_BIND_STATUS } from '../store/types/user'
  // import { ASYNC_INCREMENT } from '../store/types/counter'
  import { asyncInc } from '../store/actions'
  // import configStore from '../store'
  // const store = configStore()

  @connect({
    asyncNum (state) {
      return state.counter.asyncNum
    },
    childNickName (state) {
      return state.user.childNickName
    },
    childName (state) {
      return state.user.childName
    },
    expirationDate (state) {
      return state.user.expirationDate
    },
    joinStatus (state) {
      return state.user.joinStatus
    },
    bindStatus (state) {
      return state.user.bindStatus
    }
  }, {
    asyncInc: asyncInc,
    setChildNickName: SET_CHILD_NICK_NAME,
    setChildName: SET_CHILD_NAME,
    setExpiration: SET_EXPIRATION_DATE,
    setJoinStatus: SET_JOIN_STATUS,
    setBindStatus: SET_BIND_STATUS
  })

  export default class User extends wepy.page {
    config = {
      navigationBarTitleText: '悠数学-家长'
    }

    components = {}

    mixins = []

    data = {
      tel: '',
      isGetData: '',
      baseViaSrc: '../static/baseVia.png',
      baseArrowSrc: '../static/base-right-arrow.png',
      vipSrc: '../static/vip-radius.png'
    }

    computed = {}

    methods = {
      test () {
        this.methods.asyncInc()
      },
      showUnbindingModal () {
        let that = this
        wx.showModal({
          title: '确定解除绑定？',
          content: '解除绑定后公众号中将不再接收作业提醒推送',
          confirmColor: '#007AFF',
          success (res) {
            if (res.confirm) {
              that._unbindStudent()
            } else if (res.cancel) {
              console.log('用户点击取消')
            }
          }
        })
      },
      showBindingPage () {
        wx.navigateTo({
          url: '/pages/child-input'
        })
      },
      showToast () {
        wx.showToast({
          title: '成功',
          icon: 'success',
          image: '../static/baseVia.png',
          duration: 1400
        })
      },
      showCallActionSheet () {
        let that = this
        wx.showActionSheet({
          itemList: [`拨打 ${that.tel}`],
          itemColor: '#007AFF',
          success (res) {
            console.log(res)
            if (that.tel) {
              that._callService()
            } else {
              wx.showToast({icon: 'none', title: '未获取到电话号码', duration: 1400})
            }
          }
        })
      }
    }

    // 拨打客服电话
    _callService () {
      wx.makePhoneCall({
        phoneNumber: this.tel.replace(/-/g, '')// 仅为示例，并非真实的电话号码
      })
    }

    _reset () {
      this.methods.setBindStatus(false)
      this.methods.setJoinStatus(false)
      this.isGetData = true
      this.baseViaSrc = '../static/baseVia.png'
      this.$apply()
    }

    _getBindStatus () {
      let that = this
      wx.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/hasBind`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wx.getStorageSync('token')
        },
        success (res) {
          console.log('user.wpy --> _getBindStatus --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            that.methods.setBindStatus(res.data.ret.hasBind)
            if (res.data.ret.hasBind) {
              that._getUserAllInfo()
              // that._getUserInfo()
              // that._getUserCenter()
            } else {
              that._reset()
            }
          } else {
            that._reset()
            wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
          }
        },
        fail (res) {
          console.log('user.wpy --> _getBindStatus --> fail')
          console.log(res)
          that._reset()
          wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
        }
      })
    }

    _getUserAllInfo () {
      let that = this
      Promise.all([this._getUserInfo(), this._getUserCenter()]).then((result) => {
        console.log('user.wpy --> _getUserAllInfo')
        that.isGetData = true
        that.$apply()
      })
    }

    _getUserInfo () {
      let that = this
      return new Promise((resolve, reject) => {
        wx.request({
          url: `${this.$parent.globalData.baseURL}/wx/parent/getUserInfo`,
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'S_T': wx.getStorageSync('token')
          },
          success (res) {
            console.log('user.wpy --> _getUserInfo --> success')
            console.log(res)
            if (res.data.ret_code === 0) {
              // that.methods.setChildName(res.data.ret.user.name)
              that.methods.setJoinStatus(res.data.ret.userMember.memberType.toLowerCase().includes('vip'))
              if (res.data.ret.userMember.memberType.toLowerCase().includes('vip')) {
                that.methods.setExpiration(moment(res.data.ret.userMember.endAt).format('YYYY-MM-DD'))
              }
              resolve(true)
              // that.baseViaSrc = `${that.$parent.globalData.baseURL}${res.data.ret.user.minAvatarUrl}` || '../static/baseVia.png'
              // that.$apply()
            } else {
              // that.methods.setBindStatus(false)
              wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
              resolve(false)
            }
          },
          fail (res) {
            console.log('user.wpy --> _getUserInfo --> fail')
            console.log(res)
            // that.methods.setBindStatus(false)
            wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
            resolve(false)
          }
        })
      })
    }

    _getTel () {
      let that = this
      wx.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/user/userCenter`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wx.getStorageSync('token')
        },
        success (res) {
          console.log('user.wpy --> _getTel --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            that.tel = res.data.ret.customerTel1
          }
        }
      })
    }
  
    _getUserCenter () {
      let that = this
      return new Promise((resolve, reject) => {
        wx.request({
          url: `${this.$parent.globalData.baseURL}/wx/micro/parent/user/userCenter`,
          method: 'POST',
          header: {
            'Content-Type': 'application/x-www-form-urlencoded',
            'S_T': wx.getStorageSync('token')
          },
          success (res) {
            console.log('user.wpy --> _getUserCenter --> success')
            console.log(res)
            if (res.data.ret_code === 0) {
              that.tel = res.data.ret.customerTel1
              that.methods.setChildName(res.data.ret.studentInfo.name)
              that.methods.setChildNickName(res.data.ret.studentAccount.name)
              if (res.data.ret.studentInfo.minAvatarUrl) {
                that.baseViaSrc = `${that.$parent.globalData.baseURL}${res.data.ret.studentInfo.minAvatarUrl}`
              } else {
                that.baseViaSrc = '../static/baseVia.png'
              }
              that.$apply()
              resolve(true)
              // that.methods.setJoinStatus(res.data.ret.userMember.memberType.toLowerCase().includes('vip'))
              // that.methods.setExpiration(moment(res.data.ret.userMember.endAt).format('YY-MM-DD'))
              // that.baseViaSrc = res.data.ret.user.minAvatarUrl || '../static/baseVia.png'
            } else {
              // that.methods.setBindStatus(false)
              wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
              resolve(false)
            }
          },
          fail (res) {
            console.log('user.wpy --> _getUserCenter --> fail')
            console.log(res)
            // that.methods.setBindStatus(false)
            wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
            resolve(false)
          }
        })
      })
    }

    _unbindStudent () {
      let that = this
      wx.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/user/unbindStudent`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wx.getStorageSync('token')
        },
        success (res) {
          console.log('user.wpy --> _unbindStudent --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            // that.methods.setBindStatus(false)
            that._getBindStatus()
          } else {
            wx.showToast({icon: 'none', title: res.data.ret_msg, duration: 1400})
          }
        },
        fail (res) {
          console.log('user.wpy --> _unbindStudent --> fail')
          console.log(res)
          wx.showToast({icon: 'none', title: '请求失败', duration: 1400})
        }
      })
    }

    events = {}

    onLoad () {
      console.log('user.wpy --> onLoad')
      // this.methods.setParentName('你爸爸')
      // store.dispatch({type: SET_JOIN_STATUS, payload: true})
      // console.log(store.getState())
    }

    onShow () {
      this._getTel()
      // this._getUserInfo()
      this._getBindStatus()
      console.log('user.wpy --> onShow')
    }
  }
</script>
<style lang="scss" scoped>
#user{
  display: flex;
  flex-direction: column;
  .userInfo{
    position: relative;
    display: flex;
    justify-content: space-between;
    min-height: 230rpx;
    margin: 30rpx 30rpx 10rpx;
    border-radius: 10rpx;
    padding: 40rpx;
    box-sizing: border-box;
    &.binding{
      background: #007AFF;
      .info{
        .name{
          color: #FFFFFF;
        }
        .account{
          color: #FFFFFF;
        }
        .describe{
          color: #64AFFF;
          &.join{
            color: #ffffff;
          }
        }
      }
    }
    &.unbinding{
      background: #F6F6F6;
      .info{
        .name{
          color: #000000;
        }
      }
    }
    .info{
      display: flex;
      flex: 0 1 auto;
      flex-direction: column;
      .name{
        font-weight: bold;
        font-size: 40rpx;
        letter-spacing: 1rpx;
        padding-right: 120rpx;
      }
      .account{
        font-weight: bold;
        font-size: 30rpx;
        letter-spacing: 1rpx;
        margin: 20rpx 0 25rpx;
      }
      .describe{
        font-weight: bold;
        font-size: 30rpx;
        letter-spacing: 1rpx;
        white-space: nowrap;
      }
    }
    .viaWrap{
      position: absolute;
      right: 40rpx;
      display: flex;
      flex-direction: column;
      flex:0 0 auto;
      align-items: center;
      .viaImg{
        display: block;
        width: 100rpx;
        height: 100rpx;
        border-radius: 100%;
        &.vip{
          border: 4rpx solid #ffbc01;
        }
      }
      .vipImg{
        display: block;
        width: 60rpx;
        height: 24rpx;
        margin-top: -14rpx; 
      }
    }
  }
  .item{
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 40rpx 32rpx 40rpx 0;
    margin: 0 0 0 30rpx;
    outline: none;
    line-height: 30rpx;
    border: 0 solid #fff;
    color: #000;
    border-radius: 0;
    border-bottom: 1rpx solid #CCCCCC;
    background: #fff;
    .label{
      font-weight: bold;
      font-size: 40rpx;
      letter-spacing: 1rpx;
    }
    .arrowImg{
      width: 14rpx;
      height: 24rpx;
    }
  }
  button::after{
    border:none;
  }

  .loading{
    display: flex;
    height: 100vh;
    background: #ffffff;
    flex-direction: column;
    flex:1 1 auto;
    align-items: center;
    justify-content: center;
    .text{
      font-weight: bold;
      font-size: 30rpx;
      line-height: 40rpx;  
    }
  }
  @keyframes rotate{
    0%{
      transform: rotate(0);
    }
    50%{
    	transform:rotate(180deg);
    }
    100%{
      transform: rotate(360deg);
    }
  }
  .rotate{
    display: block;
    width: 60rpx;
    height: 60rpx;
    margin-bottom: 4rpx;
    transition: 0.5s;
    animation: rotate 0.8s linear infinite;
  }
}
</style>
