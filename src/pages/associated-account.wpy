<template>
  <view id="associatedAccount">
    <view class="header">
      <image class="lineImg rotate" src="../static/line.png"/>
      <view class="title">操作说明</view>
      <image class="lineImg" src="../static/line.png"/>
    </view>
    <view class="section">
      <view class="subTitle">一、面对面扫码关联孩子账号</view>
      <view class="paragraph">1.用孩子的手机打开悠数学-学生端APP；</view>
      <view class="paragraph">2.进入“我”的页面，点击右上角的二维码图标；</view>
      <view class="paragraph">3.点击底部的“扫码关联孩子账号”按钮，进行扫码。</view>
      <image class="pic" src="http://qnstatic.file.yoomath.com/jiazhangduanguanlianzhiyin.gif"/>
    </view>
    <view class="section">
      <view class="subTitle">二、使用截图扫码关联孩子账号</view>
      <view class="paragraph">1.将学生端APP中的个人二维码进行拍照或截图；</view>
      <view class="paragraph">2.点击页面底部的“扫码关联孩子账号”按钮；</view>
      <view class="paragraph">3.进入扫码页后，点击右上方的“相册”按钮，选择个人二维码图片，进行扫码关联。</view>
      <image class="pic" src="http://qnstatic.file.yoomath.com/jiazhangduanguanlianzhiyin.gif"/>
    </view>
    <view class="section">
      <view class="subTitle">三、输入孩子的账号密码进行关联</view>
      <view class="paragraph">向孩子索要悠数学的账号和密码，点击底部的“输入孩子的账号和密码进行关联”按钮，进行关联。如有其它疑问请联系客服：400-828-6506</view>
    </view>
    <!-- <view class="text">打开悠数学-学生端APP，进入“我”的页面，点击右上角的二维码图标，进行扫码</view> -->
   
    <view class="fixed">
      <view class="btn" @tap="scan">扫码关联孩子账号</view>
      <view class="btn ghost" @tap="input">输入孩子的账号和密码进行关联</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import { connect } from 'wepy-redux'
  import {
    SET_AVATAR_URL,
    SET_SCHOOL_NAME,
    SET_STUDENT_NAME,
    SET_STUDENT_ID
  } from '../store/types/associated-account'
  import mta from '../utils/mta_analysis.js'
  import CryptoJS from 'crypto-js'

  @connect({}, {
    setAvatarUrl: SET_AVATAR_URL,
    setSchoolName: SET_SCHOOL_NAME,
    setStudentName: SET_STUDENT_NAME,
    setStudentId: SET_STUDENT_ID
  })

  export default class associatedAccount extends wepy.page {
    config = {
      navigationBarTitleText: '关联孩子账号'
    }

    components = {}

    mixins = []

    data = {}

    computed = {}

    methods = {
      scan () {
        let that = this
        mta.Event.stat('scan_code')
        wepy.scanCode({
          success (res) {
            console.log('associated-account.wpy --> scan --> succcess')
            console.log(res)
            try {
              that._getAccountInfo(that._decryptByDES(res.result, 'elanking'))
            } catch (error) {
              wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
            }
          },
          fail (res) {
            console.log('associated-account.wpy --> scan --> fail')
            console.log(res)
            if (!res.errMsg.includes('cancel')) {
              wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
            }
          }
        })
      },
      input () {
        console.log('associated-account.wpy --> input')
        mta.Event.stat('Enter_Account')
        wepy.navigateTo({
          url: '/pages/child-input'
        })
      }
    }

    _decryptByDES (ciphertext, key) {
      let keyHex = CryptoJS.enc.Utf8.parse(key)
      let decrypted = CryptoJS.DES.decrypt({
        ciphertext: CryptoJS.enc.Base64.parse(ciphertext)
      }, keyHex, {
        mode: CryptoJS.mode.ECB,
        padding: CryptoJS.pad.Pkcs7
      })
      return decrypted.toString(CryptoJS.enc.Utf8)
    }

    _getAccountInfo (id) {
      let that = this
      wepy.request({
        url: `${this.$parent.globalData.baseURL}/wx/micro/parent/scanFindStu`,
        method: 'POST',
        header: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'S_T': wepy.getStorageSync('token')
        },
        data: {
          stuId: id
        },
        success (res) {
          console.log('associated-account.wpy --> _getAccountInfo --> success')
          console.log(res)
          if (res.data.ret_code === 0) {
            that.methods.setStudentId(id)
            if (res.data.ret.photoUrl) {
              that.methods.setAvatarUrl(`${that.$parent.globalData.baseURL}${res.data.ret.photoUrl}`)
            } else {
              that.methods.setAvatarUrl('../static/baseVia.png')
            }
            that.methods.setSchoolName(res.data.ret.schoolName)
            that.methods.setStudentName(res.data.ret.studentName)
            wepy.navigateTo({
              url: '/pages/verify-account'
            })
          } else {
            wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
          }
        },
        fail (res) {
          console.log('associated-account.wpy --> _getAccountInfo --> fail')
          console.log(res)
          wepy.showToast({icon: 'none', title: '扫码失败', duration: 1400})
        }
      })
    }

    events = {}

    onLoad () {
      console.log('associated-account.wpy --> onLoad')
      mta.Page.init()
    }

    onShow () {
      console.log('associated-account.wpy --> onShow')
    }
  }
</script>
<style lang="scss" scoped>
#associatedAccount{
  padding: 0 0 320rpx;
  &::-webkit-scrollbar {display:none}
  .header{
    margin: 60rpx 0;
    display: flex;
    justify-content: center;
    align-items: center;
    .title{
      color: #007AFF;
      font-weight: bold;
      font-size: 36rpx;
      margin: 0 20rpx;
    }
    .lineImg{
      display: inline-block;
      width: 112rpx;
      height: 12rpx;
      &.rotate{
        transform: rotate(180deg)
      }
    }
  }
  .subTitle{
    margin-bottom: 30rpx;
    font-size: 36rpx;
    font-weight: bold;
    color: #000000;
    line-height: 40rpx;
  }
  .paragraph{
    font-size: 30rpx;
    color:#999999;
    line-height: 42rpx;
  }
  .pic{
    margin: 40rpx auto 60rpx;
    display: block;
    width: 320rpx;
    height: 408rpx;
  }
  .section{
    padding: 0 30rpx;
  }
  .fixed{
    position: fixed;
    bottom: 0;
    width: 100%;
    background: #fff;
    border-radius: 20rpx;
    box-shadow: 0rpx 0rpx 20rpx 0rpx rgba(0,0,0,0.3);
  }
  .btn{
    margin: 30rpx 30rpx 0;
    box-sizing: border-box;
    height: 90rpx;
    color: #fff;
    background: rgba(0,122,255,1);
    border-radius: 10rpx;
    text-align: center;
    font-size: 30rpx;
    line-height: 90rpx;
    &.ghost{
      margin: 40rpx 30rpx 40rpx;
      color: rgba(153,153,153,1);
      background: #fff;
      border: 1rpx solid rgba(153,153,153,1);
      border-radius: 10rpx;
    }
  }
}
</style>
