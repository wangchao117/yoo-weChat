<template>
  <!-- <view class="authorizeModal"> -->
  <view class="authorizeModal" wx:if="{{modalShow}}">
    <view class="wrap {{maskShow?'active':''}}">
      <image class="img" src="../static/authorize.png"/>
      <view class="title">需要微信授权</view>
      <view class="subTitle">我们需要获得你的微信授权，才能继续后续的操作。请在接下来的授权弹框中点击“<view class="label">允许</view>”。</view>
      <view class="btnWrap">
        <view class="btn ghost"  @touchstart="close">取消</view>
        <!-- <view class="btn"  @touchstart="confirm">立即授权</view> -->
        <button class="btn" open-type="getUserInfo" @getuserinfo="confirm" @tap="click">
          立即授权
        </button>
      </view>
    </view>
    <view class="mask {{maskShow?'active':''}}"></view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import mta from '../utils/mta_analysis.js'
  export default class authorizeModal extends wepy.component {
    components = {}

    mixins = []

    data = {
      modalShow: false,
      maskShow: false
    }

    props = {
      value: {
        type: Boolean,
        default: false
      }
    }

    watch = {
      value (val) {
        if (val) {
          this.modalShow = true
          setTimeout(() => {
            this.maskShow = true
            this.modalShow = true
            this.$apply()
          }, 20)
        } else {
          this.modalShow = false
          setTimeout(() => {
            this.maskShow = false
            this.modalShow = false
            this.$apply()
          }, 200)
        }
      }
    }

    computed = {}

    methods = {
      click () {
        this.modalShow = false
        setTimeout(() => {
          this.maskShow = false
          this.modalShow = false
          this.$apply()
        }, 200)
      },
      close () {
        this.modalShow = false
        this.maskShow = false
        mta.Event.stat('Authorization_Reject')
        setTimeout(() => {
          this.modalShow = true
          this.maskShow = true
          this.$apply()
        }, 500)
        // this.$emit('on-close')
      },
      confirm () {
        if (arguments[0].detail.errMsg.includes('ok')) {
          // 确定
          mta.Event.stat('Authorization_Permit')
          this.$emit('on-confirm')
        } else {
          // 取消
          // 弹窗显示
          this.modalShow = true
          setTimeout(() => {
            this.maskShow = true
            this.modalShow = true
            this.$apply()
          }, 20)
        }
      }
    }

    events = {}

    onLoad () {

    }
  }
</script>
<style lang="scss" scoped>
.authorizeModal{
  position: fixed;
  display: flex;
  align-items: center;
  justify-content: center;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 999;
  .mask{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #000;
    // opacity: 0.5;
    transition: opacity 0.2s;
    opacity: 0;
    &.active{
      opacity: 0.5;
    }
  }
  .wrap{
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 560rpx;
    z-index: 1;
    background:#ffffff;
    border-radius: 10rpx;
    transition: opacity 0.2s;
    opacity: 0;
    &.active{
      opacity: 1;
    }
    .title{
      font-weight: bold;
      color: #000000;
      font-size: 36rpx;
      margin: 34rpx 0 40rpx;
    }
    .img{
      display: block;
      margin-top: 34rpx;
      width: 102rpx;
      height: 102rpx;
    }
    .subTitle{
      color: #999999;
      font-size: 30rpx;
      line-height: 42rpx;
      margin: 0rpx 56rpx 40rpx;
    }
    .label{
      display: inline;
      color: #36D275;
      font-size: 30rpx;
      line-height: 42rpx;
    }
    .btnWrap{
      display: flex;
      justify-content: space-between;
      border-top: 1rpx solid #D2D3D5;
      width:100%;
      height: 100rpx;
      border-bottom-right-radius: 10rpx;
      border-bottom-left-radius: 10rpx;
    }
    .btn{
      display: flex;
      width: 50%;
      box-sizing: border-box;
      align-items: center;
      justify-content: center;
      outline: none;
      font-size: 34rpx;
      color: #007AFF;
      border-left: 1rpx solid #D2D3D5;
      border-radius: 0;
      border-bottom-right-radius: 10rpx;
      border-bottom-left-radius: 10rpx;
      background: #fff;
      &.ghost{
        color: #000;
        border-left: 0rpx;
      }
    }
  }
  button::after{
    border: none;
  }
}
// @keyframes myfirst{
//   from{
//     background: red;
//   }
//   to{
//     background: yellow;
//   }
// }
</style>
